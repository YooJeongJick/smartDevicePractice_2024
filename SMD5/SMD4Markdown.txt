목차
=
- 정의
- 예제

<br>
<br>

예제
-
ESP32는 인터넷 연결을 통해    
웹 서버를 실행하여 웹 페이지를 제공할 수 있다.   
해당 예제에서는 이를 활용해 메시지를 반환해 볼 것이다.   

<br>

예제를 실행시키기 위한 코드는 다음과 같다.   
```
#include <WiFi.h>        // WiFi 라이브러리를 포함합니다.
#include <WebServer.h>   // WebServer 라이브러리를 포함합니다.

const char* ssid = "WEBSERVER";             // 연결할 Wi-Fi의 SSID를 입력합니다.
const char* password = "20240403";     // Wi-Fi의 비밀번호를 입력합니다.

WebServer server(80);                          // 포트 번호 80을 사용하여 WebServer 객체를 생성합니다.

void handleRoot() {
  server.send(200, "text/plain", "Hello from ESP32!");   // "/" 경로에 대한 요청을 처리하는 핸들러 함수입니다.
}

void setup() {
  Serial.begin(115200);                         // 시리얼 통신을 초기화합니다.

  WiFi.begin(ssid, password);                    // Wi-Fi에 연결합니다.
  Serial.println("Connected to WiFi");           
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.print(".");
  }

  server.on("/", handleRoot);                    // "/" 경로에 대한 요청을 handleRoot() 함수로 처리합니다.

  while (WiFi.status() != WL_CONNECTED) {        // Wi-Fi 연결이 완료될 때까지 대기합니다.
      delay(500);
      Serial.print(".");
  }

  Serial.println("");
  Serial.println("WiFi connected.");
  Serial.println("IP address: ");
  Serial.println(WiFi.localIP());                // Wi-Fi의 로컬 IP 주소를 출력합니다.

  server.begin();                                // 서버를 시작합니다.
}

void loop() {
  server.handleClient();                         // 클라이언트의 요청을 처리합니다.
}
```

<br>

ESP32는 인터넷에 기반해 웹 서버를 공급함으로 인터넷 설정이 필수적이다.    
앞선 예제에서 언급된 인터넷 설정은 다음과 같다.   
```
const char* ssid = "WEBSERVER";             // 연결할 Wi-Fi의 SSID를 입력합니다.
const char* password = "20240403";     // Wi-Fi의 비밀번호를 입력합니다.
```
여기서 SSID는 서비스 세트 식별자로 (Service Set Identifier)의 약자이다.   
즉, Wife SSID는 와이파이의 이름을 의미한다.   

<br>

해당 예제에서는 모바일 핫스팟을 통해 인터넷을 설정하였다.   
![Screenshot_20240404_111406_Settings](https://github.com/YooJeongJick/smartDevicePractice_2024/assets/145202997/78abf637-6c39-4e1f-b03b-b12497d2c496)   

<br>

예제 실행 시, ESP32에 할당된 IP 주소를 확인하기 위해선   
컴퓨터에 Serial Monitor 창을 추가시켜야 한다.   
창을 추가시키는 방법은 다음과 같다.   
![스크린샷 2024-04-04 110914](https://github.com/YooJeongJick/smartDevicePractice_2024/assets/145202997/998103d5-d5db-4ef1-a292-cb2b4d644f63)   

<br>

이에 대한 실행 결과는 위와 같은데,    
제공받은 IP를 브라우저 주소 입력창에 작성하면 된다.    
해당 예제에서는 모바일 크롬을 사용하였다.   
![스크린샷 2024-04-04 113203](https://github.com/YooJeongJick/smartDevicePractice_2024/assets/145202997/995ac606-c80f-466b-9d28-fe8d4abdeaa2)   
![Screenshot_20240404_111455_Chrome](https://github.com/YooJeongJick/smartDevicePractice_2024/assets/145202997/8943f315-706a-4cdc-aad1-568bd1e6134a)   
